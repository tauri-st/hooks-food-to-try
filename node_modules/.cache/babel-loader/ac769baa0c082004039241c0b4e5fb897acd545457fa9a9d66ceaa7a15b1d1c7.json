{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\skillcrush\\\\break-into-tech\\\\react\\\\hooks\\\\hooks-food-to-try\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NewFoodInput from \"./NewFoodInput\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  //5.Create state with an initial value of an empty array\n  const [foodsToTry, setFoodsToTry] = useState([]);\n  /*6. Add a function to accept a food and call the setFoodsToTry \n  function to add it to the foodsToTry array*/\n  const addFoodItem = food => {\n    setFoodsToTry(foodsToTry.concat(food));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Foods to Try\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewFoodInput, {\n      addFoodItem: addFoodItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"food-list\",\n      children: [foodsToTry.map((food, index) => {\n        /*#__PURE__*/_jsxDEV(\"li\", {\n          children: food\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this);\n      }), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EmPFSRThY987owJbQUaLQA8Kozo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NewFoodInput","jsxDEV","_jsxDEV","App","_s","foodsToTry","setFoodsToTry","addFoodItem","food","concat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/skillcrush/break-into-tech/react/hooks/hooks-food-to-try/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport NewFoodInput from \"./NewFoodInput\";\nimport \"./styles.css\";\n\nexport default function App() {\n  //5.Create state with an initial value of an empty array\n  const [ foodsToTry, setFoodsToTry ] = useState([]);\n  /*6. Add a function to accept a food and call the setFoodsToTry \n  function to add it to the foodsToTry array*/\n  const addFoodItem = (food) => {\n    setFoodsToTry(foodsToTry.concat(food));\n  }\n  return (\n    <div className=\"App\">\n      <h1>New Foods to Try</h1>\n      {/*8. Pass the addFoodItem function as a prop to the NewFoodInput component*/}\n      <NewFoodInput addFoodItem={addFoodItem} />\n      {/*7. Map over the foodstoTry array and output a list item\n      for each food*/}\n      <ul className=\"food-list\">\n        {/*foodsToTry.map(function (item) {\n          return <li>${item}</li>\n          });*/}\n        {foodsToTry.map((food, index) => {\n          <li key={index}>{food}</li>\n        })};\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B;EACA,MAAM,CAAEC,UAAU,EAAEC,aAAa,CAAE,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD;AACF;EACE,MAAMQ,WAAW,GAAIC,IAAI,IAAK;IAC5BF,aAAa,CAACD,UAAU,CAACI,MAAM,CAACD,IAAI,CAAC,CAAC;EACxC,CAAC;EACD,oBACEN,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBT,OAAA;MAAAS,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzBb,OAAA,CAACF,YAAY;MAACO,WAAW,EAAEA;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG1Cb,OAAA;MAAIQ,SAAS,EAAC,WAAW;MAAAC,QAAA,GAItBN,UAAU,CAACW,GAAG,CAAC,CAACR,IAAI,EAAES,KAAK,KAAK;QAC/B,aAAAf,OAAA;UAAAS,QAAA,EAAiBH;QAAI,GAAZS,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAC7B,CAAC,CAAC,EAAC,GACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACX,EAAA,CAzBuBD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}