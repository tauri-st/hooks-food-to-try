{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\skillcrush\\\\break-into-tech\\\\react\\\\hooks\\\\hooks-food-to-try\\\\src\\\\NewFoodInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewFoodInput = () => {\n  _s();\n  /*create a variable to keep track of the state of the food \n  item the user types in the input. Set the initial value of \n  the useState() to an empty string: (\"\").*/\n  const [food, setFood] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"food-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: food\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add to the list!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(NewFoodInput, \"KBCIu/RJZsiM4BFqdhKEp3Je5Yc=\");\n_c = NewFoodInput;\nexport default NewFoodInput;\nvar _c;\n$RefreshReg$(_c, \"NewFoodInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewFoodInput","_s","food","setFood","className","children","type","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/skillcrush/break-into-tech/react/hooks/hooks-food-to-try/src/NewFoodInput.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst NewFoodInput = () => {\n  /*create a variable to keep track of the state of the food \n  item the user types in the input. Set the initial value of \n  the useState() to an empty string: (\"\").*/\n  const [ food, setFood ] = useState(\"\");\n  return (\n    <form className=\"food-form\">\n      {/*Add the value and attribute that is equal to the food state value*/}\n      <input type=\"text\" value={food} />\n      <button>Add to the list!</button>\n    </form>\n  );\n};\n\nexport default NewFoodInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;AACF;AACA;EACE,MAAM,CAAEC,IAAI,EAAEC,OAAO,CAAE,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,oBACEE,OAAA;IAAMK,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAEzBN,OAAA;MAAOO,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEL;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCZ,OAAA;MAAAM,QAAA,EAAQ;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEX,CAAC;AAACV,EAAA,CAZID,YAAY;AAAAY,EAAA,GAAZZ,YAAY;AAclB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}